[["reactivity.html", "Chapter 5 Reactivity 5.1 Reactive expressions save recomputation", " Chapter 5 Reactivity When you change the input, the output is automatically updated. ui &lt;- fluidPage( textInput(&quot;name&quot;, &quot;What&#39;s your name?&quot;), textOutput(&quot;greeting&quot;) ) server &lt;- function(input, output, session) { output$greeting &lt;- renderText({ paste0(&quot;Hello &quot;, input$name, &quot;!&quot;) }) } 5.1 Reactive expressions save recomputation Example of a reactive expression library(shiny) y &lt;- reactive(input$x + 1) # or y &lt;- reactive({ input$x + 1 }) # or y &lt;- reactive({ return(input$x + 1) }) Reactivity explained using Pythagoras calculation: We have used browser() calls to debug the function ui_pythagorus &lt;- fluidPage( titlePanel(&quot;Hypotenuse app&quot;), sliderInput(&quot;a&quot;, &quot;Length a&quot;, 0, 10, 5), sliderInput(&quot;b&quot;, &quot;Length b&quot;, 0, 10, 5), textOutput(&quot;result&quot;)) server_pythagorus &lt;- function(input, output, server) { a2 &lt;- reactive({ cat(&quot;Compute a squared.\\n&quot;) input$a ** 2 }) browser() b2 &lt;- reactive({ cat(&quot;Compute b squared.\\n&quot;) input$b ** 2 }) browser() output$result &lt;- renderText({ cat(&quot;Compute hypotenuse.\\n&quot;) h &lt;- sqrt(a2() + b2()) cat(&quot;Done computing hypotenuse.\\n&quot;) paste0(&quot;The hypotenuse is &quot;, h) }) browser() } Now, we run the function server_pythagorus() "]]
